/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.shop.Frame;

import static com.shop.Frame.AccountFrame.con;
import com.shop.dao.CategoryDao;
import com.shop.dao.ProductDao;
import com.shop.daoImpl.CategoryDaoImpl;
import com.shop.daoImpl.ProductDaoImpl;
import com.shop.model.Category;
import com.shop.model.Product;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Jatendar
 */
public class ProductFrame extends javax.swing.JFrame {

    /**
     * Creates new form ProductFrame
     */
    public ProductFrame() {
        initComponents();
        fillCategoryCombo();
        fillProductTable();
        deleteButton.setEnabled(false);
        updateButton.setEnabled(false);
    }
    Product p = new Product();
    ProductDao productDao = new ProductDaoImpl();
    Category c = new Category();
    CategoryDao categoryDao = new CategoryDaoImpl();

    public void fillProductTable() {
        Object columnAdd[] = {"Product Id", "Product Name", "Quantity", "Price", "Category", "Remarks", "Created Date", "Created By", "Modified Date", "Modified By", "Status"};
        DefaultTableModel model = new DefaultTableModel(columnAdd, 0);
        List<Product> list = productDao.viewAllRecord();
        for (Product v : list) {
            c = categoryDao.viewById(v.getCategory().getCategoryId());
            Object rowAdd[] = {v.getProductId(), v.getProductName(), v.getQuantity(), v.getPrice(), c.getCategory(), v.getRemarks(), v.getCreatedDate(), v.getCreatedName(), v.getModifiedDate(), v.getModifedName(), v.getStatus()};
            model.addRow(rowAdd);
            productTable.setModel(model);
        }
    }

    public void fillCategoryCombo() {
        List<Category> list = categoryDao.viewAllRecord();
        categoryCombo.addItem("--- Select Category ---");
        for (Category b : list) {
            categoryCombo.addItem(b.getCategory());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        homeButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        nameText = new javax.swing.JTextField();
        quantutyText = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        remarksText = new javax.swing.JTextField();
        categoryCombo = new javax.swing.JComboBox<>();
        statusText = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        priceText = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        searchText = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        Clear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();
        addButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        homeButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        homeButton.setText("Home");
        homeButton.setToolTipText("");
        homeButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 0), 2));
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });
        getContentPane().add(homeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(795, 11, 116, 36));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Product Menu");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 10, 267, 46));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Product Name");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 73, 92, 26));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Quantity");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 106, 92, 26));

        nameText.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        nameText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nameText.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51), 2));
        getContentPane().add(nameText, new org.netbeans.lib.awtextra.AbsoluteConstraints(131, 74, 153, 26));

        quantutyText.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        quantutyText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quantutyText.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51), 2));
        getContentPane().add(quantutyText, new org.netbeans.lib.awtextra.AbsoluteConstraints(131, 107, 153, 26));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Category");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(302, 73, 92, 26));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("Remarks");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(302, 106, 92, 26));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setText("Status");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(302, 139, 92, 26));

        remarksText.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        remarksText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        remarksText.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51), 2));
        getContentPane().add(remarksText, new org.netbeans.lib.awtextra.AbsoluteConstraints(404, 107, 153, 26));

        categoryCombo.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        categoryCombo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 0), 2));
        getContentPane().add(categoryCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(404, 74, 153, 26));

        statusText.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        statusText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        statusText.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51), 2));
        getContentPane().add(statusText, new org.netbeans.lib.awtextra.AbsoluteConstraints(404, 140, 153, 26));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel9.setText("Price");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 139, 92, 26));

        priceText.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        priceText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        priceText.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51), 2));
        getContentPane().add(priceText, new org.netbeans.lib.awtextra.AbsoluteConstraints(131, 140, 153, 26));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel10.setText("Search");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(302, 172, 58, 26));

        searchText.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        searchText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        searchText.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51), 2));
        searchText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTextKeyReleased(evt);
            }
        });
        getContentPane().add(searchText, new org.netbeans.lib.awtextra.AbsoluteConstraints(404, 172, 206, 26));

        addButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        addButton.setText("Add");
        addButton.setToolTipText("");
        addButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 0), 2));
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        getContentPane().add(addButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(628, 81, 115, -1));

        updateButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        updateButton.setText("Update");
        updateButton.setToolTipText("");
        updateButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 0), 2));
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        getContentPane().add(updateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(628, 108, 115, -1));

        deleteButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        deleteButton.setText("Delete");
        deleteButton.setToolTipText("");
        deleteButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 0), 2));
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        getContentPane().add(deleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(628, 135, 115, -1));

        Clear.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Clear.setText("Clear");
        Clear.setToolTipText("");
        Clear.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 0), 2));
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });
        getContentPane().add(Clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(628, 162, 115, -1));

        productTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 255, 0), 2));
        productTable.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        productTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(productTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 204, 901, 379));

        addButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        addButton1.setText("Product Details");
        addButton1.setToolTipText("");
        addButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 0), 2));
        addButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(addButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(753, 108, 117, 48));

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Jatendar\\OneDrive\\Desktop\\MallManagementSystem\\blue background.jpg")); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 920, 60));

        jLabel4.setIcon(new javax.swing.ImageIcon("C:\\Users\\Jatendar\\OneDrive\\Desktop\\MallManagementSystem\\dfadf.jpg")); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 920, 540));

        pack();
    }// </editor-fold>                        

    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {                                           
        HomeFrame frame = new HomeFrame();
        frame.setVisible(true);
        this.dispose();
    }                                          

    private void searchTextKeyReleased(java.awt.event.KeyEvent evt) {                                       
        DefaultTableModel table = (DefaultTableModel) productTable.getModel();
        String search = searchText.getText();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<DefaultTableModel>(table);
        productTable.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter(search));
    }                                      

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {                                          
        if (nameText.getText().trim().isEmpty() || quantutyText.getText().trim().isEmpty()
                || priceText.getText().trim().isEmpty() || remarksText.getText().trim().isEmpty() || statusText.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Field(s) are Empty");
        } else {
            String categoryName = categoryCombo.getSelectedItem().toString();
            Integer categoryId = categoryDao.viewByName(categoryName);
            String name = nameText.getText();
            Integer quantity = Integer.parseInt(quantutyText.getText());

            String status = statusText.getText();
            String remarks = remarksText.getText();
            Double price = Double.parseDouble(priceText.getText());
            p.setPrice(price);
            p.setProductName(name);
            p.setQuantity(quantity);
            p.setStatus(status);
            p.setRemarks(remarks);
            c.setCategoryId(categoryId);
            p.setCategory(c);
            Integer number = productDao.addProduct(p);
            if (number > 0) {
                JOptionPane.showMessageDialog(this, "Added Successfully");
                fillProductTable();
                categoryCombo.setSelectedIndex(0);
                nameText.setText("");
                quantutyText.setText("");
                statusText.setText("");
                remarksText.setText("");
                priceText.setText("");
            }

        }
    }                                         

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
        if (nameText.getText().trim().isEmpty() || quantutyText.getText().trim().isEmpty()
                || priceText.getText().trim().isEmpty() || remarksText.getText().trim().isEmpty() || statusText.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Field(s) are Empty");
        } else {
            Integer id = (Integer) productTable.getValueAt(productTable.getSelectedRow(), 0);
            String categoryName = categoryCombo.getSelectedItem().toString();
            Integer categoryId = categoryDao.viewByName(categoryName);
            String name = nameText.getText();
            Integer quantity = Integer.parseInt(quantutyText.getText());

            String status = statusText.getText();
            String remarks = remarksText.getText();
            Double price = Double.parseDouble(priceText.getText());
            p.setPrice(price);
            p.setProductName(name);
            p.setQuantity(quantity);

            p.setStatus(status);
            p.setRemarks(remarks);
            c.setCategoryId(categoryId);
            p.setCategory(c);
            p.setProductId(id);
            Integer number = JOptionPane.showConfirmDialog(this, "Do You Want Update your Record?");
            if (number == 0) {
                productDao.updateProduct(p);
                fillProductTable();
                JOptionPane.showMessageDialog(this, "Update Successfully");
                deleteButton.setEnabled(false);
                updateButton.setEnabled(false);
                Clear.setEnabled(true);
                addButton.setEnabled(true);
                categoryCombo.setSelectedIndex(0);
                nameText.setText("");
                quantutyText.setText(""); 
                statusText.setText("");
                remarksText.setText("");
                priceText.setText("");
            }
        }
    }                                            

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
        Integer id = (Integer) productTable.getValueAt(productTable.getSelectedRow(), 0);
        Integer number = JOptionPane.showConfirmDialog(this, "Do You Want Delete your Record?");
        if (number == 0) {
            productDao.deleteProduct(id);
            fillProductTable();
            JOptionPane.showMessageDialog(this, "Delete Successfully");
            categoryCombo.setSelectedIndex(0);
            nameText.setText("");
            quantutyText.setText("");

            statusText.setText("");
            remarksText.setText("");
            priceText.setText("");
        }
    }                                            

    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {                                      
        deleteButton.setEnabled(false);
        updateButton.setEnabled(false);
        addButton.setEnabled(true);
        addButton.setEnabled(true);
        categoryCombo.setSelectedIndex(0);
        nameText.setText("");
        quantutyText.setText("");

        statusText.setText("");
        remarksText.setText("");
        priceText.setText("");
    }                                     

    private void productTableMouseClicked(java.awt.event.MouseEvent evt) {                                          
        addButton.setEnabled(false);
        Clear.setEnabled(false);
        deleteButton.setEnabled(true);
        updateButton.setEnabled(true);
        Integer id = (Integer) productTable.getValueAt(productTable.getSelectedRow(), 0);
        Product p = productDao.viewById(id);
        c = categoryDao.viewById(p.getCategory().getCategoryId());
        categoryCombo.setSelectedItem(c.getCategory());
        nameText.setText(p.getProductName());
        quantutyText.setText(p.getQuantity().toString());
        statusText.setText(p.getStatus());
        priceText.setText(p.getPrice().toString());
        remarksText.setText(p.getRemarks());
    }                                         

    private void addButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                           
       try {
            JasperDesign design = JRXmlLoader.load("D:\\University_work\\TuitionWork\\IReport\\ShopManagementSystem\\Product.jrxml");
            JasperReport report = JasperCompileManager.compileReport(design);
            JasperPrint jasperPrint = JasperFillManager.fillReport(report, null, con);
            JasperViewer.viewReport(jasperPrint);
        } catch (JRException ex) {
            ex.printStackTrace();
        }
    }                                          

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProductFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton Clear;
    private javax.swing.JButton addButton;
    private javax.swing.JButton addButton1;
    private javax.swing.JComboBox<String> categoryCombo;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton homeButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameText;
    private javax.swing.JTextField priceText;
    private javax.swing.JTable productTable;
    private javax.swing.JTextField quantutyText;
    private javax.swing.JTextField remarksText;
    private javax.swing.JTextField searchText;
    private javax.swing.JTextField statusText;
    private javax.swing.JButton updateButton;
    // End of variables declaration                   
}
