/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.shop.Frame;

import com.shop.dao.PermissionDao;
import com.shop.dao.RoleDao;
import com.shop.dao.RolePermissionDao;
import com.shop.daoImpl.PermissionDaoImpl;
import com.shop.daoImpl.RoleDaoImpl;
import com.shop.daoImpl.RolePermissionDaoImpl;
import com.shop.model.Permission;
import com.shop.model.Role;
import com.shop.model.RolePermission;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jatendar
 */
public class RolePermissionFrame extends javax.swing.JFrame {

    /**
     * Creates new form FeesFrame
     */
    public RolePermissionFrame() {
        initComponents();
        fillRollCombo();
        fillRolePermissionTable();
        fillPermissionCombo();
    }

    public void fillRollCombo() {
        List<Role> list = rollDao.viewAllRecord();
        roleCombo.addItem("--- Select Role ---");
        for (Role b : list) {
            roleCombo.addItem(b.getName());
        }
    }

    public void fillPermissionCombo() {
        List<Permission> list = permissionDao.viewAllRecord();
        permissionCombo.addItem("--- Select Permission ---");
        for (Permission b : list) {
            permissionCombo.addItem(b.getName());
        }
    }
    Role roll = new Role();
    RoleDao rollDao = new RoleDaoImpl();
    Permission permission = new Permission();
    PermissionDao permissionDao = new PermissionDaoImpl();
    RolePermissionDao rolePermissionDao = new RolePermissionDaoImpl();
    RolePermission rolePermission = new RolePermission();

    public void fillRolePermissionTable() {
        Object columnAdd[] = {"Id", "Role", "Permision"};
        DefaultTableModel model = new DefaultTableModel(columnAdd, 0);
        List<RolePermission> list = rolePermissionDao.viewAllRecord();
        for (RolePermission f : list) {
            roll = rollDao.viewById(f.getRole().getId());
            permission = permissionDao.viewById(f.getPermission().getId());
            Object rowAdd[] = {f.getId(), roll.getName(), permission.getName()};
            model.addRow(rowAdd);
            feesTable.setModel(model);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        feesLable = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        feesTable = new javax.swing.JTable();
        addButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        roleCombo = new javax.swing.JComboBox<>();
        permissionLable = new javax.swing.JLabel();
        permissionCombo = new javax.swing.JComboBox<>();
        homeButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Role Permission Menu");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(293, 11, 284, 34));

        feesLable.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        feesLable.setText("Name/Roll");
        getContentPane().add(feesLable, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 81, 102, 25));

        feesTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 0), 2));
        feesTable.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        feesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        feesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                feesTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(feesTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 181, 894, 336));

        addButton.setBackground(new java.awt.Color(204, 204, 204));
        addButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        addButton.setText("Add");
        addButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 255, 0), 2));
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        getContentPane().add(addButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 154, 108, -1));

        updateButton.setBackground(new java.awt.Color(204, 204, 204));
        updateButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        updateButton.setText("Update");
        updateButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 255, 0), 2));
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        getContentPane().add(updateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(145, 154, 108, -1));

        deleteButton.setBackground(new java.awt.Color(204, 204, 204));
        deleteButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        deleteButton.setText("Delete");
        deleteButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 255, 0), 2));
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        getContentPane().add(deleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(271, 154, 108, -1));

        clearButton.setBackground(new java.awt.Color(204, 204, 204));
        clearButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        clearButton.setText("Clear");
        clearButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 255, 0), 2));
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        getContentPane().add(clearButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(389, 154, 108, -1));

        roleCombo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        roleCombo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        getContentPane().add(roleCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(133, 81, 158, -1));

        permissionLable.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        permissionLable.setText("Permission");
        getContentPane().add(permissionLable, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 118, 108, 25));

        permissionCombo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        permissionCombo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        getContentPane().add(permissionCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(133, 117, 158, -1));

        homeButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        homeButton.setText("Home");
        homeButton.setToolTipText("");
        homeButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 0), 2));
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });
        getContentPane().add(homeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(788, 15, 116, 36));

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Jatendar\\OneDrive\\Desktop\\MallManagementSystem\\blue background.jpg")); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 930, 70));

        jLabel3.setIcon(new javax.swing.ImageIcon("C:\\Users\\Jatendar\\OneDrive\\Desktop\\MallManagementSystem\\dfadf.jpg")); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 930, 460));

        pack();
    }// </editor-fold>                        

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {                                          

        String role = roleCombo.getSelectedItem().toString();
        Integer roleId = rollDao.viewByName(role);
        String permission1 = permissionCombo.getSelectedItem().toString();
        Integer permissionId = permissionDao.viewByName(permission1);
        roll = new Role();
        roll.setId(roleId);
        permission = new Permission();
        permission.setId(permissionId);
        rolePermission = new RolePermission();
        rolePermission.setRole(roll);
        rolePermission.setPermission(permission);
        Integer number = rolePermissionDao.addRollPermission(rolePermission);
        if (number > 0) {
            JOptionPane.showMessageDialog(this, "Added Successfullly");
            fillRolePermissionTable();
            roleCombo.setSelectedIndex(0);
            permissionCombo.setSelectedIndex(0);
        }

    }                                         

    private void feesTableMouseClicked(java.awt.event.MouseEvent evt) {                                       
        Integer id = (Integer) feesTable.getValueAt(feesTable.getSelectedRow(), 0);
        RolePermission fees = rolePermissionDao.viewById(id);
        roll = rollDao.viewById(fees.getRole().getId());
        permission = permissionDao.viewById(fees.getPermission().getId());
        roleCombo.setSelectedItem(roll.getName());
        permissionCombo.setSelectedItem(permission.getName());

    }                                      

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             

        Integer id = (Integer) feesTable.getValueAt(feesTable.getSelectedRow(), 0);
        roll.setId(id);

        int num = JOptionPane.showConfirmDialog(this, "Do You want Update Your Record? ");
        if (num == 0) {
            rollDao.updateRoll(roll);
            fillRolePermissionTable();
            roleCombo.setSelectedIndex(0);
            permissionCombo.setSelectedIndex(0);
        }
    }                                            

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
        Integer id = (Integer) feesTable.getValueAt(feesTable.getSelectedRow(), 0);
        Integer number = JOptionPane.showConfirmDialog(this, "Do You Want Delete Your Record?");
        if (number == 0) {
            rollDao.deleteRoll(id);
            fillRolePermissionTable();
            roleCombo.setSelectedIndex(0);
            permissionCombo.setSelectedIndex(0);
        }
    }                                            

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {                                            
        roleCombo.setSelectedIndex(0);
        permissionCombo.setSelectedIndex(0);
    }                                           

    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {                                           
        HomeFrame frame = new HomeFrame();
        frame.setVisible(true);
        this.dispose();
    }                                          

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RolePermissionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RolePermissionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RolePermissionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RolePermissionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RolePermissionFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton addButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel feesLable;
    private javax.swing.JTable feesTable;
    private javax.swing.JButton homeButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> permissionCombo;
    private javax.swing.JLabel permissionLable;
    private javax.swing.JComboBox<String> roleCombo;
    private javax.swing.JButton updateButton;
    // End of variables declaration                   
}
