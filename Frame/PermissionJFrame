/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.shop.Frame;
import com.shop.dao.PermissionDao;
import com.shop.dao.RoleDao;
import com.shop.dao.RolePermissionDao;
import com.shop.daoImpl.PermissionDaoImpl;
import com.shop.daoImpl.RoleDaoImpl;
import com.shop.daoImpl.RolePermissionDaoImpl;
import com.shop.model.Permission;
import com.shop.model.Role;
import com.shop.model.RolePermission;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;

/**
 *
 * @author Jatendar
 */
public class PermissionJFrame extends javax.swing.JFrame {

    /**
     * Creates new form PermissionJFrame
     */
    public PermissionJFrame() {
        initComponents();
        fillRoleCombo();
        showAllUnassignedPermissions();
        fillLists();
    }
    Role r = new Role();
    RoleDao roleDao = new RoleDaoImpl();
    DefaultListModel<String> unAssignedModel = new DefaultListModel<>();
    DefaultListModel<String> assignedModel = new DefaultListModel<>();
    Permission p = new Permission();
    PermissionDao permissionDao = new PermissionDaoImpl();
    RolePermissionDao rolePermissionDao = new RolePermissionDaoImpl();

    public void fillRoleCombo() {
        List<Role> allRoles = roleDao.viewAllRecord();
        roleCombo.addItem("--- Select Role ---");
        for (Role r : allRoles) {
            roleCombo.addItem(r.getName());
        }
    }
    static Integer item = null;
    static Integer roleId = null;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        roleText = new javax.swing.JLabel();
        roleCombo = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        roleText1 = new javax.swing.JLabel();
        roleText2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        list1 = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        list2 = new javax.swing.JList<>();
        AssignPermissionButton = new javax.swing.JButton();
        removePermissionButton = new javax.swing.JButton();
        assignAllPermissionButton = new javax.swing.JButton();
        removeAllPermissionButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        roleText.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        roleText.setText("Role");

        roleCombo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        roleCombo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 102), 2));
        roleCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roleComboActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Permission Frame");

        roleText1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        roleText1.setText("UnAssigned Permissions");

        roleText2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        roleText2.setText("Assigned Permissions");

        list1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0), 2));
        list1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        list1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                list1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(list1);

        list2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0), 2));
        list2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        list2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                list2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(list2);

        AssignPermissionButton.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        AssignPermissionButton.setText(">");
        AssignPermissionButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255), 2));
        AssignPermissionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AssignPermissionButtonActionPerformed(evt);
            }
        });

        removePermissionButton.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        removePermissionButton.setText("<");
        removePermissionButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255), 2));
        removePermissionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removePermissionButtonActionPerformed(evt);
            }
        });

        assignAllPermissionButton.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        assignAllPermissionButton.setText(">>");
        assignAllPermissionButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255), 2));
        assignAllPermissionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignAllPermissionButtonActionPerformed(evt);
            }
        });

        removeAllPermissionButton.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        removeAllPermissionButton.setText("<<");
        removeAllPermissionButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255), 2));
        removeAllPermissionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeAllPermissionButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(141, 141, 141)
                                .addComponent(roleText, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(roleCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(118, 118, 118))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(assignAllPermissionButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                                    .addComponent(removePermissionButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(AssignPermissionButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(removeAllPermissionButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(roleText1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(roleText2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(327, 327, 327)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roleText, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roleCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(roleText1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1)
                                .addContainerGap())
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                                .addComponent(AssignPermissionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)
                                .addComponent(removePermissionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(assignAllPermissionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44)
                                .addComponent(removeAllPermissionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(75, 75, 75))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(roleText2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2))))
        );

        pack();
    }// </editor-fold>                        

    private void list1MouseClicked(java.awt.event.MouseEvent evt) {                                   
        item = list1.getSelectedIndex();
    }                                  

    private void list2MouseClicked(java.awt.event.MouseEvent evt) {                                   
        item = list2.getSelectedIndex();
    }                                  

    private void roleComboActionPerformed(java.awt.event.ActionEvent evt) {                                          
        if (roleCombo.getSelectedIndex() == 0) {
            assignedModel.clear();
            unAssignedModel.clear();
            showAllUnassignedPermissions();
        } else {
            assignedModel.clear();
            String role = roleCombo.getSelectedItem().toString();
            roleId = roleDao.viewByName(role);
            fillLists();
        }
    }                                         

    private void AssignPermissionButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                       
        if(list1.getSelectedValue() == null || roleCombo.getSelectedIndex() == 0){
                
        }else{
            String perm = list1.getSelectedValue();
            p = permissionDao.viewById(permissionDao.viewByName(perm));
            r = roleDao.viewById(roleId);
            
            rolePermissionDao.addRollPermissions(r, p);
            fillLists();

        }
    }                                                      

    private void removePermissionButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                       
        if(list2.getSelectedValue() == null || roleCombo.getSelectedIndex() == 0){
        
        }else{
        String perm = list2.getSelectedValue();
        p = permissionDao.viewById(permissionDao.viewByName(perm));
        r = roleDao.viewById(roleId);
        
        Integer rpId = rolePermissionDao.getRolePermissionId(r, p);
            
        rolePermissionDao.deleteRollPermission(rpId);
        fillLists();
        }
    }                                                      

    private void assignAllPermissionButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                          
         if(roleCombo.getSelectedIndex() == 0){
        
        }else{
        
            int size = list1.getModel().getSize();
            
            for(int i=0; i<size; i++){
            
                String perm = unAssignedModel.getElementAt(i);
                p = permissionDao.viewById(permissionDao.viewByName(perm));
                r = roleDao.viewById(roleId);
        
                Integer rpId = rolePermissionDao.getRolePermissionId(r, p);
            
                rolePermissionDao.addRollPermissions(r, p);
                
            }
            fillLists();
        }
    }                                                         

    private void removeAllPermissionButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                          
        if(roleCombo.getSelectedIndex() == 0){
        
        }else{
        
            int size = list1.getModel().getSize();
            
            for(int i=0; i<size; i++){
            
                String perm = unAssignedModel.getElementAt(i);
                p = permissionDao.viewById(permissionDao.viewByName(perm));
                r = roleDao.viewById(roleId);
        
                RolePermission rpId = rolePermissionDao.viewByIds(r, p);
                rolePermissionDao.addRollPermissions(r, p);
                
            }
            fillLists();
    }                                                         
    }    
public void showAllUnassignedPermissions() {

        List<Permission> allPermissions = permissionDao.viewAllRecord();

        for (int i = 0; i < allPermissions.size(); i++) {

            unAssignedModel.addElement(allPermissions.get(i).getName());
        }
        list1.setModel(unAssignedModel);

    }

    public static List<String> PermissionToString(List<Permission> p) {

        List<String> stringList = new ArrayList<>();

        for (Permission per : p) {

            stringList.add(per.getName().toString());
        }

        return stringList;
    }

    public void fillLists() {
        List<Permission> allAssignedPermissions = (List<Permission>) permissionDao.viewById(roleId);
        List<Permission> allPermissions = permissionDao.viewAllRecord();

        List<String> allAssignedString = PermissionToString(allAssignedPermissions);

        assignedModel.clear();
        for (Permission p : allAssignedPermissions) {

            assignedModel.addElement(p.getName());

        }

        unAssignedModel.clear();
        for (int i = 0; i < allPermissions.size(); i++) {

            if (allAssignedString.contains(allPermissions.get(i).getName())) {
                continue;

            } else {

                unAssignedModel.addElement(allPermissions.get(i).getName());
            }
        }

        list1.setModel(unAssignedModel);
        list2.setModel(assignedModel);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PermissionJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PermissionJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PermissionJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PermissionJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PermissionJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton AssignPermissionButton;
    private javax.swing.JButton assignAllPermissionButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> list1;
    private javax.swing.JList<String> list2;
    private javax.swing.JButton removeAllPermissionButton;
    private javax.swing.JButton removePermissionButton;
    private javax.swing.JComboBox<String> roleCombo;
    private javax.swing.JLabel roleText;
    private javax.swing.JLabel roleText1;
    private javax.swing.JLabel roleText2;
    // End of variables declaration                   
}
